#!/bin/bash
# 
# cubic (c) 2016 
# 
# script will change case in input file to 
#  a) output file
#  b) stdout
# 
# input file can be passed as 
#  a) argument on start
#  b) interactively - if started without argument input file will be provided interactively
#
# Versioning :
# 0.1	- 18th November 2016 - initial script structure, defining basic conditionsi
# 0.2 
#  

# validating 1st argument
# -n $2 veriffy if argument was provided and if was if not asked for help
#-z string - True if string is empty.
#-n string - True if string is not empty.

# check how many arguments were passed 
# $# variable will tell you the number of input arguments the script was passed.
if [ $# -eq 0 ]
  then
    echo "No arguments supplied"
fi


# check if working as superuser
if [ $(id -u) = "0" ]; then
echo "You are superuser!"
fi

if [[ -n $2 ]]
then

  if [[ $2 -eq "--help" ]] || [[ $2 -eq "-h" ]]
  then 
     echo "Run with arguments..."
     echo ""
     echo "Usage: txtrans.sh <input file>"
     echo ""
     echo "Example: txtrans.sh /tmp/file01.txt"
     exit 2
  else [[ -z $2 ]]
     echo "INFO: No argument provided for <input file>. Continue..."
#     value="1" 	# define here default value if not provided but 
# 					# required anyway to continue the run
#					# can be used for interactive read of input file 
     echo -n "Enter Input File Name : "
     read inputFile
  fi
fi

# validating 2nd argument, exiting if more arguments
if [[ -z $3 ]]
then
  if [[ -n $3 ]]
  then
     echo "INFO: No argument provided for <output file>. Continue..."
#     value2="100"
# 
     echo -n "Enter Output File Name : "
	 read outputFile
  else [[ -n $4 ]]
     echo "ERR: Too many arguments. Exiting"
     echo "INFO: Use "txtrans.sh --help" or "txtrans.sh -h" for more details."
     exit 2
  fi
fi

## DEBUG1:
print "START of DEBUG1:"
print $2
print $3
print $inputFile
print $outputFile
print "END of DEBUG1:"

# VALIDATION II:
# Validate if ifile and ofile exists 
if [ ! -f $2 ] || [ ! -f $inputFile ]; then
# check return code of evaluation:
  echo $?
  echo "Debug : get RC of validating ifile"
  echo "0 = success. "
  echo "nonzero  = command failed to execute."
  echo "Debug - end"

# another if required here to print $2 or $inputFile
# for now $inputFile is printed 
  echo "Input File Name $inputFile does not exists."
  exit 1
fi


# TR FUNCTIONS :  
# convert uppercase to lowercase using tr command
trulrun() {

  ifile="$2"
  ofile="$3"
  trulcmd="tr '[A-Z]' '[a-z]' < $ifile"
  $($trulcmd $ifile $ofile); echo ""

}

# convert lowercase to uppercase using tr command
trlurun() {

  ifile="$2"
  ofile="$3"
  trlucmd="tr '[a-z]' '[A-Z]' < $ifile"
  $($trlucmd $ifile $ofile); echo ""

}


# EXECUTE TR FUNCTION  
$(trrun)

tr '[A-Z]' '[a-z]' < $fileName
